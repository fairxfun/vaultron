name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to build from tag version"
        required: true
        type: string
      source_date_epoch:
        description: "SOURCE_DATE_EPOCH value (Unix timestamp)"
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    container:
      image: public.ecr.aws/amazonlinux/amazonlinux:2023.7.20250414.0
    steps:
      - name: Install required tools
        run: |
          dnf update -y
          dnf install -y tar gzip make git jq

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref }}

      - name: Get Git revision
        id: git_rev
        run: |
          VAULTRON_GIT_REVISION=$(echo ${{ github.sha }} | cut -c1-7)
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VAULTRON_VERSION=${{ github.event.inputs.tag }}
          else
            VAULTRON_VERSION=${{ github.ref_type == 'tag' && github.ref_name }}
          fi
          echo "VAULTRON_GIT_REVISION=$VAULTRON_GIT_REVISION" >> $GITHUB_ENV
          echo "VAULTRON_VERSION=$VAULTRON_VERSION" >> $GITHUB_ENV
          echo "Set VAULTRON_GIT_REVISION: $VAULTRON_GIT_REVISION"
          echo "Set VAULTRON_VERSION: $VAULTRON_VERSION"

      - name: Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.86.0

      - name: Install required tools
        run: make build-elf-install

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/fairxfun/vaultron-enclave
          tags: |
            type=semver,pattern={{version}}
            type=sha

      - name: Calculate SOURCE_DATE_EPOCH
        id: date
        run: |
          if [ -n "${{ github.event.inputs.source_date_epoch }}" ]; then
            echo "SOURCE_DATE_EPOCH=${{ github.event.inputs.source_date_epoch }}" >> $GITHUB_ENV
          else
            echo "SOURCE_DATE_EPOCH=$(date +%s)" >> $GITHUB_ENV
          fi
          echo "BUILD_DATETIME=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: Build binaries
        run: make build
        env:
          VAULTRON_GIT_REVISION: ${{ env.VAULTRON_GIT_REVISION }}
          VAULTRON_VERSION: ${{ env.VAULTRON_VERSION }}

      - name: Download AWS Nitro Enclaves Root Certificate
        run: |
          chmod +x ./scripts/download_aws_enclave_root_cert.sh
          ./scripts/download_aws_enclave_root_cert.sh

      - name: Docker Build
        uses: docker/build-push-action@v6.16.0
        with:
          context: .
          file: ./container/enclave/Dockerfile
          tags: ghcr.io/fairxfun/vaultron-enclave:latest
          labels: ${{ steps.meta.outputs.labels }}
          push: false
          no-cache: true
          provenance: false
          build-args: |
            SOURCE_DATE_EPOCH=${{ env.SOURCE_DATE_EPOCH }}
          outputs: type=docker,rewrite-timestamp=true
          platforms: linux/amd64

      - name: Docker Push
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          echo "${{ steps.meta.outputs.tags }}" | while read -r tag; do
            if [ -n "$tag" ] && [ "$tag" != '""' ]; then
              docker tag ghcr.io/fairxfun/vaultron-enclave:latest "$tag"
              docker push "$tag"
            fi
          done

      - name: Build EIF
        id: build_eif
        run: |
          make eif
          measurements=$(nitro-cli describe-eif --eif-path ./target/x86_64-unknown-linux-gnu/elf/vaultron_enclave.eif | jq -c '.Measurements')
          echo "EIF_MEASUREMENTS=$(jq -Rs . <<< "$measurements")" >> $GITHUB_ENV
        env:
          DOCKER_TAG: ${{ steps.meta.outputs.version }}

      - name: Build checksums
        run: make checksums

      - name: Create GitHub Release
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: softprops/action-gh-release@v2.2.1
        with:
          files: |
            target/x86_64-unknown-linux-gnu/elf/vaultron_enclave.eif
            target/x86_64-unknown-linux-gnu/elf/vaultron_enclave.eif.sha256
            target/x86_64-unknown-linux-gnu/release/vaultron_enclave
            target/x86_64-unknown-linux-gnu/release/vaultron_enclave.sha256
            target/x86_64-unknown-linux-gnu/release/vaultron_enclave_agent
            target/x86_64-unknown-linux-gnu/release/vaultron_enclave_agent.sha256
          body: |
            Docker Build Information:
            ```json
            {
              "SOURCE_DATE_EPOCH": "${{ env.SOURCE_DATE_EPOCH }}",
              "BUILD_DATETIME": "${{ env.BUILD_DATETIME }}"
            }
            ```
            EIF Measurements:
            ```json
            ${{ fromJSON(env.EIF_MEASUREMENTS) }}
            ```
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
